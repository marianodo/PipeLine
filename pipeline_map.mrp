Release 14.7 Map P.20131013 (nt)
Xilinx Mapping Report File for Design 'pipeline'

Design Information
------------------
Command Line   : map -intstyle ise -p xc6slx16-csg324-3 -w -logic_opt off -ol
high -t 1 -xt 0 -register_duplication off -r 4 -global_opt off -mt off -detail
-ir off -pr off -lc off -power off -o pipeline_map.ncd pipeline.ngd pipeline.pcf
 
Target Device  : xc6slx16
Target Package : csg324
Target Speed   : -3
Mapper Version : spartan6 -- $Revision: 1.55 $
Mapped Date    : Wed Feb 18 16:03:57 2015

Design Summary
--------------
Number of errors:      0
Number of warnings:    4
Slice Logic Utilization:
  Number of Slice Registers:                 2,588 out of  18,224   14%
    Number used as Flip Flops:               1,502
    Number used as Latches:                  1,057
    Number used as Latch-thrus:                  0
    Number used as AND/OR logics:               29
  Number of Slice LUTs:                      3,058 out of   9,112   33%
    Number used as logic:                    3,042 out of   9,112   33%
      Number using O6 output only:           2,919
      Number using O5 output only:              42
      Number using O5 and O6:                   81
      Number used as ROM:                        0
    Number used as Memory:                       0 out of   2,176    0%
    Number used exclusively as route-thrus:     16
      Number with same-slice register load:     13
      Number with same-slice carry load:         3
      Number with other load:                    0

Slice Logic Distribution:
  Number of occupied Slices:                 1,234 out of   2,278   54%
  Number of MUXCYs used:                       124 out of   4,556    2%
  Number of LUT Flip Flop pairs used:        4,104
    Number with an unused Flip Flop:         1,539 out of   4,104   37%
    Number with an unused LUT:               1,046 out of   4,104   25%
    Number of fully used LUT-FF pairs:       1,519 out of   4,104   37%
    Number of unique control sets:              44
    Number of slice register sites lost
      to control set restrictions:              25 out of  18,224    1%

  A LUT Flip Flop pair for this architecture represents one LUT paired with
  one Flip Flop within a slice.  A control set is a unique combination of
  clock, reset, set, and enable signals for a registered element.
  The Slice Logic Distribution report is not meaningful if the design is
  over-mapped for a non-slice resource or if Placement fails.

IO Utilization:
  Number of bonded IOBs:                        12 out of     232    5%
    Number of LOCed IOBs:                       12 out of      12  100%

Specific Feature Utilization:
  Number of RAMB16BWERs:                         0 out of      32    0%
  Number of RAMB8BWERs:                          1 out of      64    1%
  Number of BUFIO2/BUFIO2_2CLKs:                 1 out of      32    3%
    Number used as BUFIO2s:                      1
    Number used as BUFIO2_2CLKs:                 0
  Number of BUFIO2FB/BUFIO2FB_2CLKs:             1 out of      32    3%
    Number used as BUFIO2FBs:                    1
    Number used as BUFIO2FB_2CLKs:               0
  Number of BUFG/BUFGMUXs:                       4 out of      16   25%
    Number used as BUFGs:                        4
    Number used as BUFGMUX:                      0
  Number of DCM/DCM_CLKGENs:                     1 out of       4   25%
    Number used as DCMs:                         1
    Number used as DCM_CLKGENs:                  0
  Number of ILOGIC2/ISERDES2s:                   0 out of     248    0%
  Number of IODELAY2/IODRP2/IODRP2_MCBs:         0 out of     248    0%
  Number of OLOGIC2/OSERDES2s:                   0 out of     248    0%
  Number of BSCANs:                              0 out of       4    0%
  Number of BUFHs:                               0 out of     128    0%
  Number of BUFPLLs:                             0 out of       8    0%
  Number of BUFPLL_MCBs:                         0 out of       4    0%
  Number of DSP48A1s:                            0 out of      32    0%
  Number of ICAPs:                               0 out of       1    0%
  Number of MCBs:                                0 out of       2    0%
  Number of PCILOGICSEs:                         0 out of       2    0%
  Number of PLL_ADVs:                            0 out of       2    0%
  Number of PMVs:                                0 out of       1    0%
  Number of STARTUPs:                            0 out of       1    0%
  Number of SUSPEND_SYNCs:                       0 out of       1    0%

Average Fanout of Non-Clock Nets:                3.85

Peak Memory Usage:  297 MB
Total REAL time to MAP completion:  3 mins 29 secs 
Total CPU time to MAP completion:   3 mins 19 secs 

Table of Contents
-----------------
Section 1 - Errors
Section 2 - Warnings
Section 3 - Informational
Section 4 - Removed Logic Summary
Section 5 - Removed Logic
Section 6 - IOB Properties
Section 7 - RPMs
Section 8 - Guide Report
Section 9 - Area Group and Partition Summary
Section 10 - Timing Report
Section 11 - Configuration String Information
Section 12 - Control Set Information
Section 13 - Utilization by Hierarchy

Section 1 - Errors
------------------

Section 2 - Warnings
--------------------
WARNING:Place:1137 - This design is not guaranteed to be routable! This design
   contains a global buffer instance,
   <callStageID/callID_EX_Latch/tmpAluop_BUFG>, driving the net, <ALUOpId<0>>,
   that is driving the following (first 30) non-clock load pins.
   < PIN: callDebugUnit/callFifo/n0062_1024.D; >
   This is not a recommended design practice in Spartan-6 due to limitations in
   the global routing that may cause excessive delay, skew or unroutable
   situations.  It is recommended to only use a BUFG resource to drive clock
   loads. Please pay extra attention to the timing and routing of this path to
   ensure the design goals are met. This is normally an ERROR but the
   CLOCK_DEDICATED_ROUTE constraint was applied on COMP.PIN
   <callStageID/callID_EX_Latch/tmpAluop_BUFG.O> allowing your design to
   continue. This constraint disables all clock placer rules related to the
   specified COMP.PIN.
WARNING:Place:1137 - This design is not guaranteed to be routable! This design
   contains a global buffer instance,
   <callStageMEM/callMEM_WB_Latch/outRegWrite_BUFG>, driving the net,
   <RegWriteMem>, that is driving the following (first 30) non-clock load pins.
   < PIN: callStageID/callInstDecode/n1099<176>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<184>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<256>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<264>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<272>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<280>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<288>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<424>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<432>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<440>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<520>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<528>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<177>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<185>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<257>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<265>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<273>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<281>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<289>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<425>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<433>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<441>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<521>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<529>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<170>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<178>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<186>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<266>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<274>1.A4; >
   < PIN: callStageID/callInstDecode/n1099<282>1.A4; >
   This is not a recommended design practice in Spartan-6 due to limitations in
   the global routing that may cause excessive delay, skew or unroutable
   situations.  It is recommended to only use a BUFG resource to drive clock
   loads. Please pay extra attention to the timing and routing of this path to
   ensure the design goals are met. This is normally an ERROR but the
   CLOCK_DEDICATED_ROUTE constraint was applied on COMP.PIN
   <callStageMEM/callMEM_WB_Latch/outRegWrite_BUFG.O> allowing your design to
   continue. This constraint disables all clock placer rules related to the
   specified COMP.PIN.
WARNING:PhysDesignRules:372 - Gated clock. Clock net callDebugUnit/enableLatch_G
   is sourced by a combinatorial pin. This is not good design practice. Use the
   CE pin to control the loading of data into the flip-flop.
WARNING:PhysDesignRules:2410 - This design is using one or more 9K Block RAMs
   (RAMB8BWER).  9K Block RAM initialization data, both user defined and
   default, may be incorrect and should not be used.  For more information,
   please reference Xilinx Answer Record 39999.

Section 3 - Informational
-------------------------
INFO:LIT:243 - Logical network ALUOpId<1> has no load.
INFO:LIT:243 - Logical network FunctionId<5> has no load.
INFO:LIT:243 - Logical network FunctionId<3> has no load.
INFO:LIT:243 - Logical network FunctionId<2> has no load.
INFO:LIT:243 - Logical network FunctionId<1> has no load.
INFO:LIT:243 - Logical network FunctionId<0> has no load.
INFO:LIT:243 - Logical network IF_Flush has no load.
INFO:LIT:243 - Logical network EX_Flush has no load.
INFO:LIT:243 - Logical network btn_IBUF has no load.
INFO:LIT:243 - Logical network callStageIF/outShiftIF<1> has no load.
INFO:LIT:243 - Logical network callStageIF/outShiftIF<0> has no load.
INFO:LIT:243 - Logical network callStageID/outALUOp<1> has no load.
INFO:LIT:243 - Logical network callStageID/outFunction<5> has no load.
INFO:LIT:243 - Logical network callStageID/outFunction<3> has no load.
INFO:LIT:243 - Logical network callStageID/outFunction<2> has no load.
INFO:LIT:243 - Logical network callStageID/outFunction<1> has no load.
INFO:LIT:243 - Logical network callStageID/outFunction<0> has no load.
INFO:MapLib:562 - No environment variables are currently set.
INFO:LIT:244 - All of the single ended outputs in this design are using slew
   rate limited output drivers. The delay on speed critical single ended outputs
   can be dramatically reduced by designating them as fast outputs.
INFO:Pack:1716 - Initializing temperature to 85.000 Celsius. (default - Range:
   0.000 to 85.000 Celsius)
INFO:Pack:1720 - Initializing voltage to 1.140 Volts. (default - Range: 1.140 to
   1.260 Volts)
INFO:Map:215 - The Interim Design Summary has been generated in the MAP Report
   (.mrp).
INFO:Pack:1650 - Map created a placed design.

Section 4 - Removed Logic Summary
---------------------------------
   1 block(s) removed
  17 block(s) optimized away
   2 signal(s) removed
  46 Block(s) redundant

Section 5 - Removed Logic
-------------------------

The trimmed logic report below shows the logic removed from your design due to
sourceless or loadless signals, and VCC or ground connections.  If the removal
of a signal or symbol results in the subsequent removal of an additional signal
or symbol, the message explaining that second removal will be indented.  This
indentation will be repeated as a chain of related logic is removed.

To quickly locate the original cause for the removal of a chain of logic, look
above the place where that logic is listed in the trimming report, then locate
the lines that are least indented (begin at the leftmost edge).

Loadless block "callStageID/callAddID/Msub_tmpOut31" (ROM) removed.
The signal "callStageIF/callIF_ID_Latch/N0" is sourceless and has been removed.
The signal "callStageEX/callEX_MEM_Latch/N0" is sourceless and has been removed.

Optimized Block(s):
TYPE 		BLOCK
GND 		callClock10Mhz/XST_GND
GND 		callDebugUnit/XST_GND
GND 		callDebugUnit/callBaudGenerator/XST_GND
VCC 		callDebugUnit/callBaudGenerator/XST_VCC
GND 		callDebugUnit/callFifo/XST_GND
VCC 		callDebugUnit/callFifo/XST_VCC
GND 		callStageEX/callAluEx/XST_GND
GND 		callStageEX/callEX_MEM_Latch/XST_GND
GND 		callStageID/callAddID/XST_GND
VCC 		callStageID/callAddID/XST_VCC
GND 		callStageID/callEqualBranch/XST_GND
VCC 		callStageID/callEqualBranch/XST_VCC
GND 		callStageIF/callAddPc/XST_GND
VCC 		callStageIF/callAddPc/XST_VCC
GND 		callStageIF/callIF_ID_Latch/XST_GND
GND 		callStageMEM/callDataMemory/XST_GND
VCC 		callStageMEM/callDataMemory/XST_VCC

Redundant Block(s):
TYPE 		BLOCK
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_cy<1>_rt
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_cy<2>_rt
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_cy<3>_rt
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_cy<4>_rt
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_cy<5>_rt
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_cy<6>_rt
LUT1 		callDebugUnit/callFifo/Mcount_r_ptr_reg_xor<7>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_cy<1>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_cy<2>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_cy<3>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_cy<4>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_cy<5>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_cy<6>_rt
LUT1 		callDebugUnit/callBaudGenerator/Mcount_r_reg_xor<7>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<1>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<2>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<3>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<4>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<5>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<6>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<7>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<8>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<9>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<10>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<11>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<12>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<13>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<14>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<15>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<16>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<17>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<18>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<19>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<20>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<21>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<22>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<23>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<24>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<25>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<26>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<27>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<28>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<29>_rt
LUT1 		callStageIF/callAddPc/Madd_tmp_cy<30>_rt
INV 		callStageEX/callAluEx/ALUOp[1]_ALUOp[1]_OR_164_o1_INV_0
INV 		callStageMEM/callIPCoreAdapter/clkNegTmp1_INV_0

Section 6 - IOB Properties
--------------------------

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| IOB Name                           | Type             | Direction | IO Standard          | Diff  | Drive    | Slew | Reg (s)      | Resistor | IOB      |
|                                    |                  |           |                      | Term  | Strength | Rate |              |          | Delay    |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| btn                                | IOB              | INPUT     | LVCMOS25             |       |          |      |              |          |          |
| clk100                             | IOB              | INPUT     | LVCMOS25             |       |          |      |              |          |          |
| led<0>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<1>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<2>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<3>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<4>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<5>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<6>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| led<7>                             | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
| rx                                 | IOB              | INPUT     | LVCMOS25             |       |          |      |              |          |          |
| tx                                 | IOB              | OUTPUT    | LVCMOS25             |       | 12       | SLOW |              |          |          |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

Section 7 - RPMs
----------------

Section 8 - Guide Report
------------------------
Guide not run on this design.

Section 9 - Area Group and Partition Summary
--------------------------------------------

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

Area Group Information
----------------------

  No area groups were found in this design.

----------------------

Section 10 - Timing Report
--------------------------
A logic-level (pre-route) timing report can be generated by using Xilinx static
timing analysis tools, Timing Analyzer (GUI) or TRCE (command line), with the
mapped NCD and PCF files. Please note that this timing report will be generated
using estimated delay information. For accurate numbers, please generate a
timing report with the post Place and Route NCD file.

For more information about the Timing Analyzer, consult the Xilinx Timing
Analyzer Reference Manual; for more information about TRCE, consult the Xilinx
Command Line Tools User Guide "TRACE" chapter.

Section 11 - Configuration String Details
-----------------------------------------
DCM "callClock10Mhz/dcm_sp_inst":
CLKDV_DIVIDE:2.0
CLKIN_DIVIDE_BY_2:FALSE
CLKOUT_PHASE_SHIFT:NONE
CLK_FEEDBACK:1X
DESKEW_ADJUST:5
DFS_FREQUENCY_MODE:LOW
DLL_FREQUENCY_MODE:LOW
DSS_MODE:NONE
DUTY_CYCLE_CORRECTION:TRUE
STARTUP_WAIT:FALSE
VERY_HIGH_FREQUENCY:FALSE
CLKFX_DIVIDE = 1
CLKFX_MULTIPLY = 4
CLKIN_PERIOD = 10.000000
PHASE_SHIFT = 0



Section 12 - Control Set Information
------------------------------------
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Clock Signal                 | Reset Signal       | Set Signal | Enable Signal                                                        | Slice Load Count | Bel Load Count |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ALUOpId<0>                   |                    |            |                                                                      | 8                | 32             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| clk                          |                    |            |                                                                      | 413              | 1059           |
| clk                          |                    |            | callDebugUnit/callFifo/_n0085_inv                                    | 2                | 8              |
| clk                          |                    |            | callDebugUnit/callUartRx/Mmux_state_next12                           | 4                | 8              |
| clk                          |                    |            | callDebugUnit/callUartRx/_n0121_inv                                  | 1                | 3              |
| clk                          |                    |            | callDebugUnit/callUartTx/_n0112_inv                                  | 1                | 3              |
| clk                          |                    |            | callDebugUnit/callUartTx/_n0130_inv                                  | 5                | 8              |
| clk                          |                    |            | callStageIF/callIF_ID_Latch/_n0030_inv                               | 19               | 64             |
| clk                          |                    |            | enable                                                               | 139              | 309            |
| clk                          | callDebugUnit/tick |            |                                                                      | 2                | 8              |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<0>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<1>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<2>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<3>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<4>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<5>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<6>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<7>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<8>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<9>  | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<10> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<11> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<12> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<13> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<14> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<15> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<16> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<17> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<18> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<19> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<20> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<21> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<22> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<23> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<24> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<25> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<26> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<27> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<28> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<29> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<30> | 8                | 32             |
| ~RegWriteMem                 |                    |            | callStageID/callInstDecode/inInstDecodeWriteReg[4]_Decoder_1_OUT<31> | 8                | 32             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ~callDebugUnit/enableLatch_G |                    |            |                                                                      | 1                | 1              |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ~clk                         |                    |            | IF_IDWrite                                                           | 12               | 32             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Section 13 - Utilization by Hierarchy
-------------------------------------
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Module                                              | Partition | Slices*       | Slice Reg     | LUTs          | LUTRAM        | BRAM/FIFO | DSP48A1 | BUFG  | BUFIO | BUFR  | DCM   | PLL_ADV   | Full Hierarchical Name                                                                                                                                |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| pipeline/                                           |           | 0/1960        | 0/2559        | 0/3058        | 0/0           | 0/1       | 0/0     | 0/4   | 0/0   | 0/0   | 0/1   | 0/0       | pipeline                                                                                                                                              |
| +callClock10Mhz                                     |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/0       | 0/0     | 2/2   | 0/0   | 0/0   | 1/1   | 0/0       | pipeline/callClock10Mhz                                                                                                                               |
| +callDebugUnit                                      |           | 5/559         | 1/1098        | 7/427         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callDebugUnit                                                                                                                                |
| ++callBaudGenerator                                 |           | 3/3           | 8/8           | 10/10         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callDebugUnit/callBaudGenerator                                                                                                              |
| ++callFifo                                          |           | 530/530       | 1052/1052     | 372/372       | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callDebugUnit/callFifo                                                                                                                       |
| ++callStepModule                                    |           | 2/2           | 2/2           | 5/5           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callDebugUnit/callStepModule                                                                                                                 |
| ++callUartRx                                        |           | 8/8           | 17/17         | 16/16         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callDebugUnit/callUartRx                                                                                                                     |
| ++callUartTx                                        |           | 11/11         | 18/18         | 17/17         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callDebugUnit/callUartTx                                                                                                                     |
| +callForwardingUnit                                 |           | 11/11         | 0/0           | 20/20         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callForwardingUnit                                                                                                                           |
| +callHazardDetectionUnit                            |           | 10/10         | 0/0           | 22/22         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callHazardDetectionUnit                                                                                                                      |
| +callStageEX                                        |           | 0/92          | 0/111         | 0/101         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageEX                                                                                                                                  |
| ++callAluEx                                         |           | 8/8           | 32/32         | 32/32         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageEX/callAluEx                                                                                                                        |
| ++callEX_MEM_Latch                                  |           | 24/24         | 79/79         | 0/0           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageEX/callEX_MEM_Latch                                                                                                                 |
| ++callMuxExForwardA                                 |           | 31/31         | 0/0           | 32/32         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageEX/callMuxExForwardA                                                                                                                |
| ++callMuxExForwardB                                 |           | 27/27         | 0/0           | 32/32         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageEX/callMuxExForwardB                                                                                                                |
| ++callMuxRtRd                                       |           | 2/2           | 0/0           | 5/5           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageEX/callMuxRtRd                                                                                                                      |
| +callStageID                                        |           | 0/1151        | 0/1182        | 0/2336        | 0/0           | 0/0       | 0/0     | 0/1   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID                                                                                                                                  |
| ++callAddID                                         |           | 9/9           | 0/0           | 33/33         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callAddID                                                                                                                        |
| ++callControlUnit                                   |           | 8/8           | 0/0           | 14/14         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callControlUnit                                                                                                                  |
| ++callEqualBranch                                   |           | 4/4           | 0/0           | 12/12         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callEqualBranch                                                                                                                  |
| ++callID_EX_Latch                                   |           | 95/95         | 158/158       | 4/4           | 0/0           | 0/0       | 0/0     | 1/1   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callID_EX_Latch                                                                                                                  |
| ++callInstDecode                                    |           | 980/980       | 1024/1024     | 2210/2210     | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callInstDecode                                                                                                                   |
| ++callMuxDataA_ALU                                  |           | 28/28         | 0/0           | 32/32         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callMuxDataA_ALU                                                                                                                 |
| ++callMuxDataB_ALU                                  |           | 27/27         | 0/0           | 31/31         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageID/callMuxDataB_ALU                                                                                                                 |
| +callStageIF                                        |           | 0/57          | 0/96          | 0/74          | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageIF                                                                                                                                  |
| ++callAddPc                                         |           | 8/8           | 0/0           | 4/4           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageIF/callAddPc                                                                                                                        |
| ++callIF_ID_Latch                                   |           | 20/20         | 64/64         | 33/33         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageIF/callIF_ID_Latch                                                                                                                  |
| ++callInstruccionMem                                |           | 5/5           | 0/0           | 5/5           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageIF/callInstruccionMem                                                                                                               |
| ++callMuxJumpPc                                     |           | 12/12         | 0/0           | 32/32         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageIF/callMuxJumpPc                                                                                                                    |
| ++callPc                                            |           | 12/12         | 32/32         | 0/0           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageIF/callPc                                                                                                                           |
| +callStageMEM                                       |           | 0/51          | 0/72          | 0/46          | 0/0           | 0/1       | 0/0     | 0/1   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM                                                                                                                                 |
| ++callDataMemory                                    |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory                                                                                                                  |
| +++U0                                               |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory/U0                                                                                                               |
| ++++xst_blk_mem_generator                           |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory/U0/xst_blk_mem_generator                                                                                         |
| +++++gnative_mem_map_bmg.native_mem_map_blk_mem_gen |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory/U0/xst_blk_mem_generator/gnative_mem_map_bmg.native_mem_map_blk_mem_gen                                          |
| ++++++valid.cstr                                    |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory/U0/xst_blk_mem_generator/gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr                               |
| +++++++ramloop[0].ram.r                             |           | 0/0           | 0/0           | 0/0           | 0/0           | 0/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory/U0/xst_blk_mem_generator/gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[0].ram.r              |
| ++++++++s6_init.ram                                 |           | 0/0           | 0/0           | 0/0           | 0/0           | 1/1       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callDataMemory/U0/xst_blk_mem_generator/gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[0].ram.r/s6_init.ram  |
| ++callIPCoreAdapter                                 |           | 1/1           | 0/0           | 1/1           | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callIPCoreAdapter                                                                                                               |
| ++callLoadWordDividerMEM                            |           | 11/11         | 0/0           | 24/24         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callLoadWordDividerMEM                                                                                                          |
| ++callMEM_WB_Latch                                  |           | 27/27         | 72/72         | 1/1           | 0/0           | 0/0       | 0/0     | 1/1   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callMEM_WB_Latch                                                                                                                |
| ++callStoreWordDividerMEM                           |           | 12/12         | 0/0           | 20/20         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageMEM/callStoreWordDividerMEM                                                                                                         |
| +callStageWB                                        |           | 0/29          | 0/0           | 0/32          | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageWB                                                                                                                                  |
| ++callMuxWB                                         |           | 29/29         | 0/0           | 32/32         | 0/0           | 0/0       | 0/0     | 0/0   | 0/0   | 0/0   | 0/0   | 0/0       | pipeline/callStageWB/callMuxWB                                                                                                                        |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

* Slices can be packed with basic elements from multiple hierarchies.
  Therefore, a slice will be counted in every hierarchical module
  that each of its packed basic elements belong to.
** For each column, there are two numbers reported <A>/<B>.
   <A> is the number of elements that belong to that specific hierarchical module.
   <B> is the total number of elements from that hierarchical module and any lower level
   hierarchical modules below.
*** The LUTRAM column counts all LUTs used as memory including RAM, ROM, and shift registers.
